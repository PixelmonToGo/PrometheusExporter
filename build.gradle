buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            name = 'sponge'
            url = 'http://repo.spongepowered.org/maven'
        }
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'signing'
    id 'com.github.johnrengelman.shadow' version '1.2.4'
    id 'org.spongepowered.plugin' version '0.8.1'
    id 'net.minecrell.vanillagradle.server' version '2.2-6'
}

minecraft {
    mappings = 'snapshot_20171007'
    version = '1.12.2'
}

group = 'org.stonebound.prometheusexporter'
version = '1.3.2'
description = "Prometheus Exporter for Sponge"

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

defaultTasks 'build', 'shadowJar'

dependencies {
    compile 'org.spongepowered:spongeapi:7.0.0'
    compile 'io.prometheus:simpleclient_common:0.0.26'
    compile 'org.eclipse.jetty:jetty-server:9.4.6.v20170531'
    compile 'javax.servlet:javax.servlet-api:4.0.0'
}

shadowJar {
    relocate 'org.eclipse.jetty', 'prometheus.shadow.jetty'
    relocate 'io.prometheus', 'prometheus.shadow.prometheus'
    relocate 'javax.servlet', 'prometheus.shadow.servlet'

    dependencies {
        include dependency('io.prometheus:simpleclient_common:0.0.26')
        include dependency('io.prometheus:simpleclient:0.0.26')
        include dependency('org.eclipse.jetty:jetty-server:9.4.6.v20170531')
        include dependency('org.eclipse.jetty:jetty-http:9.4.6.v20170531')
        include dependency('org.eclipse.jetty:jetty-io:9.4.6.v20170531')
        include dependency('org.eclipse.jetty:jetty-util:9.4.6.v20170531')
        include dependency('javax.servlet:javax.servlet-api:4.0.0')
    }

    exclude 'jetty-dir.css'
    exclude 'about.html'

    archiveName = "spongeprometheusexporter-${version}-plugin.jar"
}

reobf {
    shadowJar{}
}

signing {
    if (project.hasProperty('signing.keyId') && project.hasProperty('signing.password') && project.hasProperty('signing.secretKeyRingFile')) {
        sign configurations.shadow
    }
}

tasks.signShadow.dependsOn retromapReplacedMain